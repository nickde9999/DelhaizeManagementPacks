<ManagementPackFragment SchemaVersion="2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
<!--
%%
Description:
  A Rule which runs a timed PowerShell script (no parameters) as the DataSource and ALERTS based on matching a condition detection
  CompanyID - is a short abbreviation for your company with NO SPACES OR SPECIAL CHARACTERS ALLOWED
  AppName - is a short name for your app with NO SPACES OR SPECIAL CHARACTERS ALLOWED 
  UniqueID - Is a unique short description of the workflow purpose (NO SPACES OR SPECIAL CHARACTERS ALLOWED) such as "CountFilesInFolder"  
  ClassID - is the targeted class such as your custom class or Windows!Microsoft.Windows.Server.OperatingSystem    
 
Version: 1.2
LastModified: 4-Nov-2017
%%

In this fragment you need to replace:
  Delhaize
  ORTEC.Schedule.Server
 CDCSChildWS
  Delhaize.ORTEC.Schedule.Servers.Class

This fragment depends on references:
  RequiredReference: Alias="System", ID="System.Library"
  RequiredReference: Alias="Windows", ID="Microsoft.Windows.Library"
  RequiredReference: Alias="Health", ID="System.Health.Library"	

@@Author=Kevin Holman@@  
--> 
  <TypeDefinitions>
    <ModuleTypes>
      <DataSourceModuleType ID="Delhaize.ORTEC.Schedule.Server.CDCSChildWS.Script.Alert.Rule.Datasource" Accessibility="Internal" Batching="false">
        <Configuration>
		  <xsd:element minOccurs="1" type="xsd:integer" name="IntervalSeconds" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
		  <xsd:element minOccurs="0" type="xsd:string" name="SyncTime" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
		  <xsd:element minOccurs="1" type="xsd:integer" name="TimeoutSeconds" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />	
        </Configuration>
        <OverrideableParameters>
		  <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
		  <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
		  <OverrideableParameter ID="TimeoutSeconds" Selector="$Config/TimeoutSeconds$" ParameterType="int" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="Scheduler" TypeID="System!System.Scheduler">
                <Scheduler>
                  <SimpleReccuringSchedule>
                    <Interval Unit="Seconds">$Config/IntervalSeconds$</Interval>
					<SyncTime>$Config/SyncTime$</SyncTime>
                  </SimpleReccuringSchedule>
                  <ExcludeDates />
                </Scheduler>
              </DataSource>
              <ProbeAction ID="PA" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagProbe">
                <ScriptName>Delhaize.ORTEC.Schedule.Server.CDCSChildWS.Script.Alert.Rule.Datasource.ps1</ScriptName>
                <ScriptBody>
                  #=================================================================================
                  #  Calculates Working Set Size for the specific CDCSChild Process
                  #
                  #  Author: Nick Dewitte
                  #  v1.0
                  #=================================================================================


                  # Constants section - modify stuff here:
                  #=================================================================================
                  # Assign script name variable for use in event logging.
                  # ScriptName should be the same as the ID of the module that the script is contained in
                  $ScriptName = "Delhaize.ORTEC.Schedule.Server.CDCSChildWS.Script.Alert.Rule.Datasource.ps1"
                  $EventID = "20001"
                  #=================================================================================


                  # Starting Script section - All scripts get this
                  #=================================================================================
                  # Gather the start time of the script
                  $StartTime = Get-Date
                  #Set variable to be used in logging events
                  $whoami = whoami
                  # Load MOMScript API
                  $momapi = New-Object -comObject MOM.ScriptAPI
                  #Log script event that we are starting task
                  $momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Script is starting. `n Running as ($whoami).")
                  #=================================================================================


                  # PropertyBag Script section - Monitoring scripts get this
                  #=================================================================================
                  # Load SCOM PropertyBag function
                  $bag = $momapi.CreatePropertyBag()
                  #=================================================================================


                  # Begin MAIN script section
                  #=================================================================================

                  $CDCSChildProcess = Get-CimInstance Win32_Process -Filter "name = 'CDCSChildProcess.exe'" | Where-Object {$_.CommandLine -match "default cdcs:1/1 loaddll=-1"}

                  $WSSize = $CDCSChildProcess.WorkingSetSize
                  $WSSizeinGB = [math]::Round($Wssize/1073741824,1)     
                  if ($CDCSChildProcess.WorkingSetSize -gt 3113851289)

                  {
                  if ($CDCSChildProcess.WorkingSetSize -gt 3328599654)
                  {
                  $Result = "Error"
                  $momapi.LogScriptEvent($ScriptName,$EventID,0, "`n Bad Condition Found `n WorkingSet is = ($WSSizeinGB)")
                  $bag.AddValue('Result',$Result)
                  $bag.AddValue('WSSize',$WSSizeinGB)


                  }
                  else
                  {
                  $Result = "Warning"
                  $momapi.LogScriptEvent($ScriptName,$EventID,0, "`n Bad Condition Found `n WorkingSet is = ($WSSizeinGB)")
                  $bag.AddValue('Result',$Result)
                  $bag.AddValue('WSSize',$WSSizeinGB)
                  }
                  }
                  else
                  {
                  $Result = "Good"
                  $momapi.LogScriptEvent($ScriptName,$EventID,0, "`n Good Condition Found `n WorkingSet is = ($WSSize)")
                  $bag.AddValue('Result',$Result)
                  }




                  # Return all bags
                  $Bag
                  #=================================================================================
                  # End MAIN script section


                  # End of script section
                  #=================================================================================
                  #Log an event for script ending and total execution time.
                  $EndTime = Get-Date
                  $ScriptTime = ($EndTime - $StartTime).TotalSeconds
                  $momapi.LogScriptEvent($ScriptName,$EventID,0,"`n Script Completed. `n Script Runtime: ($ScriptTime) seconds.")
                  #=================================================================================
                  # End of script
                </ScriptBody>
                <TimeoutSeconds>$Config/TimeoutSeconds$</TimeoutSeconds>
              </ProbeAction>			  
            </MemberModules>
            <Composition>
              <Node ID="PA">
                <Node ID="Scheduler" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
    </ModuleTypes>
  </TypeDefinitions>
  <Monitoring>
    <Rules>
      <Rule ID="Delhaize.ORTEC.Schedule.Server.CDCSChildWS.Error.Script.Alert.Rule" Enabled="true" Target="Delhaize.ORTEC.Schedule.Servers.Class" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>Alert</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Delhaize.ORTEC.Schedule.Server.CDCSChildWS.Script.Alert.Rule.Datasource">
            <IntervalSeconds>300</IntervalSeconds>
			<SyncTime></SyncTime>
			<TimeoutSeconds>120</TimeoutSeconds>
          </DataSource>
        </DataSources>
        <ConditionDetection ID="CD.Error" TypeID="System!System.ExpressionFilter">
		  <Expression>
		    <SimpleExpression>
			  <ValueExpression>
			    <XPathQuery Type="String">Property[@Name='Result']</XPathQuery>
			  </ValueExpression>
			  <Operator>Equal</Operator>
			  <ValueExpression>
			    <Value Type="String">Error</Value>
			  </ValueExpression>
		    </SimpleExpression>
		  </Expression>
        </ConditionDetection>
        <WriteActions>
          <WriteAction ID="WA.Error" TypeID="Health!System.Health.GenerateAlert">
            <Priority>1</Priority>  <!-- 0=Low, 1=Medium, 2=High -->
            <Severity>2</Severity>  <!-- 0=Information, 1=Warning, 2=Critical -->
            <AlertMessageId>$MPElement[Name="Delhaize.ORTEC.Schedule.Server.CDCSChildWS.Error.Script.Alert.Rule.AlertMessage"]$</AlertMessageId>
            <AlertParameters>
              <AlertParameter1>$Data/Property[@Name='Result']$</AlertParameter1>
              <AlertParameter2>$Data/Property[@Name='WSSize']$</AlertParameter2>
			      </AlertParameters>
			<Suppression>
              <SuppressionValue>$Data/Property[@Name='Message']$</SuppressionValue>
            </Suppression>
          </WriteAction>
        </WriteActions>
      </Rule>
      <Rule ID="Delhaize.ORTEC.Schedule.Server.CDCSChildWS.Warning.Script.Alert.Rule" Enabled="true" Target="Delhaize.ORTEC.Schedule.Servers.Class" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>Alert</Category>
        <DataSources>
          <DataSource ID="DS" TypeID="Delhaize.ORTEC.Schedule.Server.CDCSChildWS.Script.Alert.Rule.Datasource">
            <IntervalSeconds>300</IntervalSeconds>
            <SyncTime></SyncTime>
            <TimeoutSeconds>120</TimeoutSeconds>
          </DataSource>
        </DataSources>
        <ConditionDetection ID="CD.Warning" TypeID="System!System.ExpressionFilter">
          <Expression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery Type="String">Property[@Name='Result']</XPathQuery>
              </ValueExpression>
              <Operator>Equal</Operator>
              <ValueExpression>
                <Value Type="String">Warning</Value>
              </ValueExpression>
            </SimpleExpression>
          </Expression>
        </ConditionDetection>
        <WriteActions>
          <WriteAction ID="WA.Warning" TypeID="Health!System.Health.GenerateAlert">
            <Priority>1</Priority>
            <!-- 0=Low, 1=Medium, 2=High -->
            <Severity>1</Severity>
            <!-- 0=Information, 1=Warning, 2=Critical -->
            <AlertMessageId>$MPElement[Name="Delhaize.ORTEC.Schedule.Server.CDCSChildWS.Warning.Script.Alert.Rule.AlertMessage"]$</AlertMessageId>
            <AlertParameters>
              <AlertParameter1>$Data/Property[@Name='Result']$</AlertParameter1>
              <AlertParameter2>$Data/Property[@Name='WSSize']$</AlertParameter2>
            </AlertParameters>
            <Suppression>
              <SuppressionValue>$Data/Property[@Name='Message']$</SuppressionValue>
            </Suppression>
          </WriteAction>
        </WriteActions>
      </Rule>
     
      
    </Rules>
  </Monitoring>
  <Presentation>
    <StringResources>
      <StringResource ID="Delhaize.ORTEC.Schedule.Server.CDCSChildWS.Warning.Script.Alert.Rule.AlertMessage" />
      <StringResource ID="Delhaize.ORTEC.Schedule.Server.CDCSChildWS.Error.Script.Alert.Rule.AlertMessage" />

    </StringResources>
  </Presentation>
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <DisplayString ElementID="Delhaize.ORTEC.Schedule.Server.CDCSChildWS.Error.Script.Alert.Rule">
          <Name>Delhaize ORTEC Schedule Server CDCSChild Working Set Alert Rule</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Delhaize.ORTEC.Schedule.Server.CDCSChildWS.Warning.Script.Alert.Rule">
          <Name>Delhaize ORTEC Schedule Server CDCSChild Working Set Alert Rule</Name>
          <Description></Description>
        </DisplayString>
        <DisplayString ElementID="Delhaize.ORTEC.Schedule.Server.CDCSChildWS.Error.Script.Alert.Rule.AlertMessage">
          <Name>ORD Productie, ALERTA EU902783-BUC [schedule server], schedule</Name>
          <Description>
            Procesul SCHEDULE are dimensiunea mai mare de 3.1 GB.
            La dimensiunea de 3.5 GB aplicatia NU va mai functiona.
            Contactati echipa de suport ORTEC!
            Verificati URGENT daca:
            - procesul de cleaning a rulat
            - exista in grid curse, comenzi mai vechi de 3 zile

            Current Working Set : {1}
          </Description>
          </DisplayString>
        <DisplayString ElementID="Delhaize.ORTEC.Schedule.Server.CDCSChildWS.Warning.Script.Alert.Rule.AlertMessage">
          <Name>ORD Productie, ALERTA EU902783-BUC [schedule server], schedule</Name>
          <Description>
            Procesul SCHEDULE are dimensiunea mai mare de 2.9 GB.
            La dimensiunea de 3.5 GB aplicatia NU va mai functiona.
            Contactati echipa de suport ORTEC!
            Verificati URGENT daca:
            - procesul de cleaning a rulat
            - exista in grid curse, comenzi mai vechi de 3 zile

            Current Working Set : {1}
            
          </Description>
        </DisplayString>
      </DisplayStrings>
    </LanguagePack>
  </LanguagePacks>
</ManagementPackFragment>
